@model Paginacion<Contrato>
@{
    ViewData["Title"] = "Contratos";
}
<div class="text-center">
	<h1 class="display-4">Lista de Contratos</h1>
</div>
<table class="table table-striped table-hover">
  <thead>
    <tr>
      <th colspan="3">
        <form method="get" action="@Url.Action("Index", "Contrato")" id="formFiltro">
            <p>Filtrar por fecha</p>
            <label for="filFecha_desde" class="form-label">Fecha desde</label>
            <input type="date" class="form-control" id="filFecha_desde" name="Fecha_desde" value="@ViewBag.FechaDesdeFiltro?.ToString("yyyy-MM-dd")">
            <label for="filFecha_hasta" class="form-label">Fecha hasta</label>
            <input type="date" class="form-control" id="filFecha_hasta" name="Fecha_hasta" value="@ViewBag.FechaHastaFiltro?.ToString("yyyy-MM-dd")">
            <input type="submit" value="Buscar" class="btn btn-primary" />
            <button type="button" id="btnReset" class="btn btn-secondary">Limpiar</button>
        </form>
      </th>
      <th colspan="3">
        <form method="get" action="@Url.Action("Index", "Contrato")" id="formFiltro2">
          <label for="Direccion" class="form-label">Filtrar por direcion del inmueble</label>
          <input list="inmuebleList" type="text" name="direccion" id="Direccion">
           <datalist id="inmuebleList">
              @foreach (var inmueble in @ViewBag.contratosOption)
                {
                  <option value="@inmueble.Inmuebledireccion">@inmueble.Inmuebledireccion</option>
                }
           </datalist>
          <input type="submit" value="Buscar" class="btn btn-primary" />
        </form>
      </th>
      <th colspan="3">
        <form method="get" action="@Url.Action("Index", "Contrato")" id="formFiltro3">
          <label for="plazo" class="form-label">Filtrar por dias que dura el contrato</label>
          <input list="diasList" type="number" name="plazo" id="plazo">
           <datalist id="diasList">
            <option value="30">30</option>
            <option value="60">60</option>
            <option value="90">90</option>
           </datalist>
           <input type="submit" value="Buscar" class="btn btn-primary" />
        </form>
      </th>
    </tr>
    <tr>
         @if (User.IsInRole("Administrador"))
				{
          <th>Creado Por</th>
          <th>Terminado Por</th>
        }
        <th>Email del inquilino</th>
        <th>Email del Propietario</th>
        <th>Tipo de Inmueble</th>
        <th>Monto Total</th>
        <th>Fecha desde</th>
        <th>Fecha_hasta</th>
        <th>Fecha de Terminacion</th>
        <th>Estado</th>
        <th>Acciones</th>
    </tr>
  </thead>
  <tbody>
        @foreach (var item in Model)
		{
      if(@item.Estado){
      if(@item.Contrato_Completado){
			<tr class="alert alert-success" role="alert">
        @if (User.IsInRole("Administrador"))
				{
        <td>
					@Html.DisplayFor(modelItem => item.Create_user)
				</td>
        <td>
					@Html.DisplayFor(modelItem => item.Terminate_user)
				</td>
        }
				<td>
					@Html.DisplayFor(modelItem => item.Emailinquilino)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.EmailPropietario)
				</td>
        <td>
					@Html.DisplayFor(modelItem => item.Inmuebletipo)
				</td>
        <td>
					@Html.DisplayFor(modelItem => item.Monto_total)
				</td>
        <td>
            @item.Fecha_desde.ToString("dd-MM-yyyy")
        </td>
        <td>
            @item.Fecha_hasta.ToString("dd-MM-yyyy")
        </td>
        <td>
            No tiene
        </td>
        <td>
            Completado
        </td>
        <td>
        <a href="@Url.Action("Detalle", "Contrato", new { id = item.Id_contrato }) " class="btn btn-info">
            <i class="fa-solid fa-info"></i>
        </a>
          <a href="@Url.Action("Pago", "Contrato", new { id = item.Id_contrato}) " class="btn btn-primary">
              <i class="fa-solid fa-money-bill"></i>
        </a>
          <a href="javascript:void(0);" 
            id="renovar"
            data-id="@item.Id_contrato" 
            data-fecha="@item.Fecha_hasta.ToString("dd-MM-yyyy")"
            data-monto="@item.Monto"
            class="btn btn-success"
            onclick="mostrarModalRenovar(@item.Id_contrato,'@item.Fecha_hasta.ToString("yyyy-MM-dd")',@item.Monto)">
            <i class="fa-solid fa-sync"></i> Renovar
          </a>
				</td>
			</tr>
      }else{
			<tr>
        @if (User.IsInRole("Administrador"))
				{
        <td>
					@Html.DisplayFor(modelItem => item.Create_user)
				</td>
        <td>
					@Html.DisplayFor(modelItem => item.Terminate_user)
				</td>
        }
				<td>
					@Html.DisplayFor(modelItem => item.Emailinquilino)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.EmailPropietario)
				</td>
        <td>
					@Html.DisplayFor(modelItem => item.Inmuebletipo)
				</td>
        <td>
					@Html.DisplayFor(modelItem => item.Monto_total)
				</td>
        <td>
            @item.Fecha_desde.ToString("dd-MM-yyyy")
        </td>
        <td>
            @item.Fecha_hasta.ToString("dd-MM-yyyy")
        </td>
        <td>
            No tiene
        </td>
        <td>
            Activo
        </td>
        <td>
        <a href="@Url.Action("Detalle", "Contrato", new { id = item.Id_contrato }) " class="btn btn-info">
            <i class="fa-solid fa-info"></i>
        </a>
          <a href="@Url.Action("Edicion", "Contrato", new { id = item.Id_contrato}) " class="btn btn-primary">
           <i class="fa-solid fa-pencil"></i>
          </a>
          <a href="@Url.Action("Pago", "Contrato", new { id = item.Id_contrato}) " class="btn btn-primary">
              <i class="fa-solid fa-money-bill"></i>
          </a>
            <a href="javascript:void(0);" 
                data-id="@item.Id_contrato" 
                class="btn btn-danger" 
                onclick="confirmDelete(this)">
                <i class="fa-solid fa-trash"></i>
            </a>
				</td>
			</tr>
    }
    }else{
    <tr class="alert alert-danger" role="alert">
      @if (User.IsInRole("Administrador"))
				{
        <td>
					@Html.DisplayFor(modelItem => item.Create_user)
				</td>
        <td>
					@Html.DisplayFor(modelItem => item.Terminate_user)
				</td>
        }
				<td>
					@Html.DisplayFor(modelItem => item.Emailinquilino)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.EmailPropietario)
				</td>
        <td>
					@Html.DisplayFor(modelItem => item.Inmuebletipo)
				</td>
        <td>
					@Html.DisplayFor(modelItem => item.Monto_total)
				</td>
        <td>
            @item.Fecha_desde.ToString("dd-MM-yyyy")
        </td>
        <td>
            @item.Fecha_hasta.ToString("dd-MM-yyyy")
        </td>
        <td>
            @item.FechaTerminacion.ToString("dd-MM-yyyy")
        </td>
        <td>
            Anulado
        </td>
        <td>
          <a href="@Url.Action("Detalle", "Contrato", new { id = item.Id_contrato }) " class="btn btn-info">
                <i class="fa-solid fa-info"></i>
            </a>
          <a href="@Url.Action("Pago", "Contrato", new { id = item.Id_contrato}) " class="btn btn-primary">
              <i class="fa-solid fa-money-bill"></i>
          </a>
				</td>
			</tr>
      }
		}
  </tbody>
</table>
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
  <i class="fa-solid fa-plus"></i>
</button>
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Agregar Contrato</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form asp-action="Agregar" method="post" id="formAgregarContrato">
            <div class="mb-3">
            <label for="exampleInputEmail" class="form-label">Email del Inquilino</label>
            <input list="inquilinosList" type="email" class="form-control" id="exampleInputEmail" name="Email">
            <input type="hidden" id="Id_inquilinos" name="Id_inquilino" value="">
            <datalist id="inquilinosList">
              @foreach (var inquilino in ViewBag.Inquilinos)
                  {
                    <option data-id="@inquilino.Id_inquilinos" value="@inquilino.Email">@inquilino.Email</option>
                  }
            </datalist>
        </div>
        <div class="mb-3">
          <label for="exampleInputTipo" class="form-label">Tipo de Inmueble</label>
          <input list="inmueblesList" type="text" class="form-control" id="exampleInputTipo" name="Tipo" oninput="seleccionarInmueble()">
          
          <!-- Campo oculto para almacenar el Id del inmueble -->
          <input type="hidden" id="Id_inmueble" name="Id_inmueble" value="">

          <!-- Campo visible para el email del propietario -->
          <div class="mt-3">
              <label for="exampleInputPropietario" class="form-label">Email del Propietario</label>
              <input type="text" class="form-control" id="EmailPropietario" name="EmailPropietario" readonly>
          </div>

          <!-- Lista de selección con los inmuebles, mostrando tanto el tipo como una descripción única -->
          <datalist id="inmueblesList">
              @foreach (var inmueble in ViewBag.Inmuebles)
              {
                  <option data-id="@inmueble.Id_inmueble" data-pe="@inmueble.EmailPropietario" data-pt="@inmueble.Precio" value="@inmueble.Tipo - @inmueble.Direccion"></option>
              }
          </datalist>
      </div>
        <div class="mb-3">
            <label for="exampleInputMonto" class="form-label">Monto mensual</label>
            <input type="text" class="form-control" id="exampleInputMonto"  name="Monto" onchange="calcularFechaHasta()" readonly>
        </div>
         <div class="mt-3">
              <label for="exampleInputMonto_total" class="form-label">Monto Total</label>
              <input type="number" class="form-control" id="exampleInputMonto_total" name="Monto_total" readonly >
          </div>
        <div class="mb-3">
            <label for="exampleInputFecha_desde" class="form-label">Fecha desde</label>
            <input type="date" class="form-control" id="exampleInputFecha_desde" name="Fecha_desde" onchange="calcularFechaHasta()">
        </div>

        <div class="mb-3">
            <label for="exampleInputMeses" class="form-label">Duración del contrato (meses)</label>
            <input type="number" class="form-control" id="exampleInputMeses" name="Meses" min="1" max="600" value="1" onchange="calcularFechaHasta()">
        </div>

        <div class="mb-3">
            <label for="exampleInputFecha_hasta" class="form-label">Fecha hasta</label>
            <input type="date" class="form-control" id="exampleInputFecha_hasta" name="Fecha_hasta" readonly>
        </div>
        <button type="submit" class="btn btn-primary" >Agregar</button>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
<!-- Modal toats-->
<div class="toast-container position-fixed bottom-0 end-0 p-3">
  <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <strong class="me-auto">Sistema</strong>
      <small class="text-muted">justo ahora</small>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Cerrar"></button>
    </div>
    <div class="toast-body">
      @TempData["Mensaje"]
    </div>
  </div>
</div>
<!-- Modal eliminar-->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Confirmar Eliminación</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        ¿Estás seguro de que deseas cancelar este Contrato? puede causar una multa
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <a id="confirmDeleteButton" href="#" class="btn btn-danger">Eliminar</a>
      </div>
    </div>
  </div>
</div>
<!-- Modal para renovar contrato -->
<div class="modal fade" id="modalRenovarContrato" tabindex="-1" aria-labelledby="modalRenovarContratoLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalRenovarContratoLabel">Renovar Contrato</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="formRenovarContrato" action="/Contrato/Renovar" method="post">
          <input type="hidden" name="Id_contrato" id="Id_contrato_renovar" value="">
          <div class="mb-3">
            <label for="Fecha_nueva" class="form-label">Nueva Fecha de Inicio</label>
            <input type="date" class="form-control" id="Fecha_nueva" name="Fecha_desde" required>
          </div>
          <div class="mb-3">
            <label for="nuevoFecha_hasta" class="form-label">Fecha hasta</label>
            <input type="date" class="form-control" id="nuevoFecha_hasta" name="Fecha_hasta" required readonly>
          </div>
          <div class="mb-3">
            <label for="nuevoMonto" class="form-label">Monto mensual</label>
            <input type="text" class="form-control" id="nuevoMonto"  name="Monto"  value="" readonly>
        </div>
         <div class="mt-3">
              <label for="nuevoMonto_total" class="form-label">Monto Total</label>
              <input type="number" class="form-control" id="nuevoMonto_total" name="Monto_total" readonly >
          </div>
          <div class="mb-3">
            <label for="nuevoMeses" class="form-label">Duración del contrato (meses)</label>
            <input type="number" class="form-control" id="nuevoMeses" name="Meses" min="1" max="600" value="1">
        </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            <button type="submit" class="btn btn-primary">Renovar Contrato</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
<!-- Paginación -->
<nav aria-label="Navegación de página">
    <ul class="pagination justify-content-center">
        @if (Model.PaginasAnteriores)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PaginaInicio - 1)" asp-route-pageSize="@ViewBag.PageSize" aria-label="Anterior">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Anterior</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link" aria-hidden="true">&laquo;</span>
                <span class="sr-only">Anterior</span>
            </li>
        }

        @for (int i = 1; i <= Model.PaginasTotales; i++)
        {
            <li class="page-item @(i == Model.PaginaInicio ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@ViewBag.PageSize">@i</a>
            </li>
        }

        @if (Model.PaginasPosteriores)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PaginaInicio + 1)" asp-route-pageSize="@ViewBag.PageSize" aria-label="Siguiente">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Siguiente</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link" aria-hidden="true">&raquo;</span>
                <span class="sr-only">Siguiente</span>
            </li>
        }
    </ul>
</nav>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var toastElement = document.getElementById("successToast");
        var toast = new bootstrap.Toast(toastElement);
        
        @if (TempData["Mensaje"] != null)
        {
            <text>
                toast.show();
            </text>
        }
        document.getElementById('nuevoMeses').addEventListener('input', function() {
    calcularFechaHastaYMontoTotal();
  });

  document.getElementById('Fecha_nueva').addEventListener('change', function() {
    calcularFechaHastaYMontoTotal();
  });

  function calcularFechaHastaYMontoTotal() {
    // Obtener la fecha de inicio
    var fechaInicio = document.getElementById('Fecha_nueva').value;
    var meses = parseInt(document.getElementById('nuevoMeses').value);
    var montoMensual = parseFloat(document.getElementById('nuevoMonto').value);

    if (fechaInicio && meses > 0 && !isNaN(montoMensual)) {
      // Convertir la fecha de inicio a un objeto Date
      var fechaObj = new Date(fechaInicio);
      
      // Calcular la nueva fecha "hasta" sumando los meses
      fechaObj.setMonth(fechaObj.getMonth() + meses);

      // Formatear la nueva fecha "hasta" a 'yyyy-MM-dd'
      var year = fechaObj.getFullYear();
      var month = ('0' + (fechaObj.getMonth() + 1)).slice(-2); // Asegurarse de que el mes tenga dos dígitos
      var day = ('0' + fechaObj.getDate()).slice(-2); // Asegurarse de que el día tenga dos dígitos

      // Actualizar la fecha hasta en el campo correspondiente
      var fechaHastaFormateada = `${year}-${month}-${day}`;
      document.getElementById('nuevoFecha_hasta').value = fechaHastaFormateada;

      // Calcular el monto total (meses * monto mensual)
      var montoTotal = meses * montoMensual;
      document.getElementById('nuevoMonto_total').value = montoTotal;
    } else {
      // Si faltan datos, limpiar la fecha hasta y el monto total
      document.getElementById('nuevoFecha_hasta').value = '';
      document.getElementById('nuevoMonto_total').value = '';
    }
  }
  });
    function confirmDelete(element) {
        var id = element.getAttribute("data-id");
        var url = "@Url.Action("TerminarContrato", "Contrato")" + "/" + id;
        document.getElementById("confirmDeleteButton").setAttribute("href", url);
        var myModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));
        myModal.show();
    }
     document.getElementById('exampleInputEmail').addEventListener('input', function() {
        var input = this;
        var list = document.getElementById('inquilinosList');
        var hiddenInput = document.getElementById('Id_inquilinos');
        var options = list.options;

        hiddenInput.value = '';

        for (var i = 0; i < options.length; i++) {
            if (options[i].value === input.value) {
                hiddenInput.value = options[i].getAttribute('data-id');
                break;
            }
        }
    });
function seleccionarInmueble() {
    // Obtén el valor seleccionado en el input de inmuebles
    var input = document.getElementById('exampleInputTipo');
    var dataList = document.getElementById('inmueblesList');
    var options = dataList.options;

    // Recorre las opciones de la datalist para encontrar la coincidencia
    for (var i = 0; i < options.length; i++) {
        if (options[i].value === input.value) {
            // Si coincide, establece los valores correspondientes
            document.getElementById('Id_inmueble').value = options[i].getAttribute('data-id');
            document.getElementById('EmailPropietario').value = options[i].getAttribute('data-pe');
            document.getElementById('exampleInputMonto').value = options[i].getAttribute('data-pt');
            break;
        }else{
            document.getElementById('Id_inmueble').value = null;
            document.getElementById('EmailPropietario').value = null;
            document.getElementById('exampleInputMonto').value = null;
        }
    }
}
    function calcularFechaHasta() {
        var fechaDesde = document.getElementById('exampleInputFecha_desde').value;
        var meses = document.getElementById('exampleInputMeses').value;
        var monto = document.getElementById('exampleInputMonto').value;
        var monto_total = document.getElementById('exampleInputMonto_total');

        if (fechaDesde && meses) {
            // Convertir la fecha de inicio a un objeto Date
            var fecha = new Date(fechaDesde);

            // Sumar la cantidad de meses seleccionada
            fecha.setMonth(fecha.getMonth() + parseInt(meses));

            // Formatear la nueva fecha en formato YYYY-MM-DD
            var dia = String(fecha.getDate()).padStart(2, '0');
            var mes = String(fecha.getMonth() + 1).padStart(2, '0'); // Los meses son 0 indexados
            var anio = fecha.getFullYear();

            // Establecer la fecha de fin en el campo "Fecha hasta"
            document.getElementById('exampleInputFecha_hasta').value = `${anio}-${mes}-${dia}`;
            //establecer monto
            monto_total.value = meses * monto;

        }
    }
function mostrarModalRenovar(idContrato, fecha, monto) {
    // Asignar el ID del contrato al campo oculto en el formulario del modal
    document.getElementById('Id_contrato_renovar').value = idContrato;

    // Convertir la fecha en un objeto Date
    var fechaObj = new Date(fecha);

    // Agregar 1 día a la fecha de inicio
    fechaObj.setDate(fechaObj.getDate() + 1);

    // Formatear la fecha "yyyy-MM-dd"
    var year = fechaObj.getFullYear();
    var month = ('0' + (fechaObj.getMonth() + 1)).slice(-2); // Asegurarse de que el mes tenga dos dígitos
    var day = ('0' + fechaObj.getDate()).slice(-2); // Asegurarse de que el día tenga dos dígitos

    var fechaFormateada = `${year}-${month}-${day}`;

    // Asignar la fecha formateada al campo de la nueva fecha en el modal
    document.getElementById('Fecha_nueva').value = fechaFormateada;

    // Asignar el monto al campo correspondiente
    document.getElementById('nuevoMonto').value = monto;

    var meses = parseInt(document.getElementById('nuevoMeses').value); 

    if (!isNaN(meses) && meses > 0) {
        // Crear una copia del objeto de fecha para calcular la fecha "hasta"
        var fechaHastaObj = new Date(fecha);

        // Ajustar el mes de la fecha hasta
        fechaHastaObj.setMonth(fechaHastaObj.getMonth() + meses);

        // Formatear la fecha "hasta"
        var year2 = fechaHastaObj.getFullYear();
        var month2 = ('0' + (fechaHastaObj.getMonth() + 1)).slice(-2);
        var day2 = ('0' + fechaHastaObj.getDate()).slice(-2);

        var fechaHastaFormateada = `${year2}-${month2}-${day2}`;

        // Actualizar el campo "nuevoFecha_hasta"
        document.getElementById('nuevoFecha_hasta').value = fechaHastaFormateada;

        // Calcular el monto total (meses * monto mensual)
        var montoTotal = meses * monto;
        document.getElementById('nuevoMonto_total').value = montoTotal;
    }

    // Mostrar el modal
    var modalRenovar = new bootstrap.Modal(document.getElementById('modalRenovarContrato'));
    modalRenovar.show();
}
document.getElementById("btnReset").addEventListener("click", function(event) {
    event.preventDefault();  // Evitar cualquier acción predeterminada
    
    // Obtener el formulario por su ID
    const form = document.getElementById("formFiltro");

    // Limpiar los campos de fecha manualmente
    document.getElementById("filFecha_desde").value = "";
    document.getElementById("filFecha_hasta").value = "";

    //console.log("Formulario limpiado");
});
</script>